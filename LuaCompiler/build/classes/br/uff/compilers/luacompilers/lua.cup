import java_cup.runtime.*;

init with {: scanner.init(); :};
scan with {: return scanner.next_token(); :};

/* Terminal */
terminal DO, END, WHILE, REPEAT, IF, THEN, ELSE, ELSEIF, FOR, IN, UNTIL;
terminal FUNCTION, LOCAL, RETURN, BREAK;
terminal NIL, FALSE, TRUE, ELLIPSIS;
terminal COLON, SEMICOLON, COMMA, OPEN_BRACKETS, CLOSE_BRACKETS, OPEN_BRACES, CLOSE_BRACES, OPEN_PARENTHESES, CLOSE_PARENTHESES;
terminal SIGN, PLUS, MINUS, TIMES, DIV, UP_CARET, PERCENT, TWO_PERIOD, PERIOD;
terminal LESS_THAN, LESS_THAN_EQUAL, GREATHER_THAN, GREATHER_THAN_EQUAL, EQUAL, DIFFERENT;
terminal AND, OR, NOT, LENGTH;
terminal NUMBER, STRING, IDENTIFIER;

non terminal chuck;
non terminal block;
non terminal stat;
non terminal laststat;
non terminal funcname;
non terminal varlist;
non terminal var;
non terminal namelist;
non terminal explist;
non terminal exp;
non terminal prefixexp;
non terminal functioncall;
non terminal args;
non terminal function;
non terminal funcbody;
non terminal parlist;
non terminal tableconstructor;
non terminal fieldlist;
non terminal field;
non terminal fieldsep;
non terminal binop;
non terminal unop;

non terminal semicolontemp;
non terminal tempchuck;
non terminal laststattemp;
non terminal elseiftemp;
non terminal elsetemp;
non terminal commaexptemp;
non terminal signexplisttemp;
non terminal explisttemp;
non terminal periodidentifiertemp;
non terminal commavartemp;
non terminal commaidentifiertemp;
non terminal expcommatemp;
non terminal parlisttemp;
non terminal commaellipsistemp;
non terminal fieldlisttemp;
non terminal fieldsepfieldtemp;
non terminal fieldseptemp;
non terminal twoperiodidentifertemp;


/* Precedences */

precedence left OR;
precedence left AND;
precedence left LESS_THAN, GREATHER_THAN, LESS_THAN_EQUAL, GREATHER_THAN_EQUAL, DIFFERENT , EQUAL;
precedence right TWO_PERIOD;
precedence left PLUS, MINUS;
precedence left TIMES, DIV, PERCENT;
precedence left NOT;
precedence right UP_CARET;

start with chuck;

chuck ::= tempchuck laststattemp
          ;

tempchuck ::= stat semicolontemp
        ;

laststattemp ::= laststat semicolontemp
        |
        ;

block ::= chuck
          ;


semicolontemp ::= SEMICOLON
        |
        ;

stat ::= varlist SIGN explist
        | functioncall
        | DO block END
        | WHILE exp DO block END
        | REPEAT block UNTIL exp
        | IF exp THEN block elseiftemp elsetemp END
        | FOR IDENTIFIER SIGN exp COMMA exp commaexptemp DO block END
        | FOR namelist IN explist DO block END
        | FUNCTION funcname funcbody
        | LOCAL FUNCTION IDENTIFIER funcbody
        | LOCAL namelist signexplisttemp
        ;

elseiftemp ::= ELSEIF exp THEN block
        ;

elsetemp ::=  ELSE block
        |
        ;

commaexptemp ::= COMMA exp
        |
        ;

signexplisttemp ::= SIGN explist
        |
        ;

laststat ::= RETURN explisttemp
        | BREAK
        ;

explisttemp ::= explist
        |
        ;

funcname ::= IDENTIFIER periodidentifiertemp twoperiodidentifertemp
        ;

periodidentifiertemp ::= PERIOD IDENTIFIER
        ;

twoperiodidentifertemp ::= TWO_PERIOD IDENTIFIER
        |
        ;

varlist ::= var commavartemp
        ;

commavartemp ::= COMMA var
        ;

var ::= IDENTIFIER
    | prefixexp OPEN_BRACKETS exp CLOSE_BRACKETS
    | prefixexp PERIOD IDENTIFIER
    ;

namelist ::= IDENTIFIER commaidentifiertemp
        ;

commaidentifiertemp ::= COMMA IDENTIFIER
        ;

explist ::= expcommatemp exp
        ;

expcommatemp ::= exp COMMA
        ;

exp ::= NIL
        | FALSE
        | TRUE
        | NUMBER
        | STRING 
        | ELLIPSIS
        | function
        | prefixexp
        | tableconstructor
        | exp binop exp
        | unop exp
        ;

prefixexp ::= var 
            | functioncall
            | OPEN_PARENTHESES exp CLOSE_PARENTHESES
            ;

functioncall ::= prefixexp args
               | prefixexp COLON IDENTIFIER args
               ;

args ::= OPEN_PARENTHESES explisttemp CLOSE_PARENTHESES
       | tableconstructor
       | STRING
       ;

function ::= FUNCTION funcbody
          ;

funcbody ::= OPEN_PARENTHESES parlisttemp CLOSE_PARENTHESES block END
          ;

parlisttemp ::= parlist
        |
        ;

parlist ::= namelist commaellipsistemp
        | ELLIPSIS
        ;

commaellipsistemp ::= COMMA ELLIPSIS
        |
        ;

tableconstructor ::=  OPEN_BRACES fieldlisttemp CLOSE_BRACES
        ;

fieldlisttemp ::= fieldlist
        |
        ;

fieldlist ::= field fieldsepfieldtemp fieldseptemp
        ;

fieldsepfieldtemp ::= fieldsep field
        ;

fieldseptemp ::= fieldsep
        |
        ;

field ::= OPEN_BRACKETS exp CLOSE_BRACKETS SIGN exp
        | IDENTIFIER SIGN exp
        | exp
        ;

fieldsep ::= COMMA
            | SEMICOLON
            ;
            
binop ::= PLUS
        | MINUS
        | TIMES
        | DIV
        | UP_CARET
        | PERCENT
        | TWO_PERIOD
        | LESS_THAN
        | LESS_THAN_EQUAL
        | GREATHER_THAN
        | GREATHER_THAN_EQUAL
        | EQUAL
        | DIFFERENT
        | AND
        | OR
        ;

unop ::= MINUS
       | NOT
       | LENGTH
       ;
